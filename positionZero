from adafruit_servokit import ServoKit
import time
kit = ServoKit(channels=16)
# PWM 'pip install adafruit-circuitpython-servokit'

# Servo Dictionary
RIGHT = {
    0: "shoulder_FB",
    1: "shoulder_IO",
    2: "elbow",
    3: "wrist",
    4: "thumb",
    5: "pointer",
    6: "middle",
    7: "ring",
    8: "little"
}

LEFT = {
    0: "shoulder_FB",
    1: "shoulder_IO",
    2: "elbow",
    3: "wrist",
    4: "thumb",
    5: "pointer",
    6: "middle",
    7: "ring",
    8: "little"
}

#SERVO POSITIONS

RIGHT_STANDARD_POSITION = {
    0: 102,
    1: 110,
    2: 100,
    3: 100,
    4: 90,
    5: 90,
    6: 90,
    7: 90,
    8: 90
}

RIGHT_PISTOLS_FIRING = {
    0: 180,
    1: 200,
    2: 70,
    3: 86,
    4: 45,
    5: 180,
    6: 0,
    7: 0,
    8: 0
}


def set_servo_angle_slowly(channel, target_angle):
    delay = 0.07
    step = 8
    try:
        current_angle = kit.servo[channel].angle
        if current_angle is None:  # If no previous angle, start from 0
            current_angle = 0
        # Determine the direction of movement
        step = step if target_angle > current_angle else -step
        # Gradually move the servo to the target angle
        for angle in range(int(current_angle), int(target_angle), step):
            kit.servo[channel].angle = angle
            time.sleep(delay)
        # Ensure the final position is set
        kit.servo[channel].angle = target_angle
    except Exception as e:
        print(f"Error moving servo on channel {channel}: {e}")

def position_standardzero():
    for channel, target_angle in RIGHT_STANDARD_POSITION.items():
        set_servo_angle_slowly(channel, target_angle)

    print("Position Zero.")

def pistols_firing():
    for channel, target_angle in RIGHT_PISTOLS_FIRING.items():
        set_servo_angle_slowly(channel, target_angle)

    print("Pistols Firing")

def main():
    position_standardzero()
    pistols_firing()



if __name__ == "__main__":
    main()
